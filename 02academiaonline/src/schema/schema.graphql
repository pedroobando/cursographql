type Query {
  "Lista de los estudiantes de la academia"
  estudiantes: [Estudiante!]!
  "Informacion del estudiante de la academia seleccionado por ID"
  estudiante(id: ID!): Estudiante!
  "Lista de los cursos de la academia"
  cursos: [Curso!]!
  "Informacion del curso de la academia seleccionado por ID"
  curso(curso: ID!): Curso!
}

type Mutation {
  cursoNuevo(curso: CursoInput!): Curso!
  cursoModif(curso: CursoInput!): Curso!
  cursoElimi(id: ID!): Curso!
}

input CursoInput {
  id: ID
  title: String!
  description: String!
  clases: Int!
  time: Float!
  logo: String!
  level: Nivel = TODOS
  path: String!
  teacher: String!
}

"Informacion de los estudiantes"
type Estudiante {
  "Identificativo del estudiante"
  id: ID!
  "Nombre del estudiante"
  name: String!
  "Email del estudiante"
  email: String!
  "Sitio web del estudiante"
  website: String
  "Cursos inscritos del estudiante"
  courses: [Curso!]!
}

"Informacion del curso de la academia"
type Curso {
  id: ID!
  title: String!
  description: String!
  clases: Int!
  time: Float!
  logo: String!
  level: Nivel!
  path: String!
  teacher: String!
  students: [Estudiante]
  reviews: [Valoracion!]!
}

enum Nivel {
  TODOS
  NOVATOS
  INTERMEDIO
  EXPERTO
}

type Valoracion {
  id: ID!
  name: String!
  points: Float!
  comment: String
}
